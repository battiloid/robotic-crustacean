
tpd:
  peer1Port: 8761
  peer2Port: 8762
  peer3Port: 8763

---
spring:
  profiles: peer1
eureka:
  instance:
    # See blog post for details, modify /etc/hosts
    hostname: eureka-peer1
    # Either this one or the spring boot name must be the same
    # (it works without setting it too, using the alias UNKNOWN)
    appname: eureka-cluster
    leaseRenewalIntervalInSeconds: 3
  client:
    serviceUrl:
      defaultZone: http://eureka-peer2:${tpd.peer2Port}/eureka,http://eureka-peer3:${tpd.peer3Port}/eureka
    register-with-eureka: true
    fetch-registry: true
    registryFetchIntervalSeconds: 5
    instanceInfoReplicationIntervalSeconds: 5
    initialInstanceInfoReplicationIntervalSeconds: 5
server:
  port: ${tpd.peer1Port}


---
spring:
  profiles: peer2
eureka:
  instance:
    hostname: eureka-peer2
    appname: eureka-cluster
    leaseRenewalIntervalInSeconds: 3
  client:
    serviceUrl:
      defaultZone: http://eureka-peer3:${tpd.peer3Port}/eureka,http://eureka-peer1:${tpd.peer1Port}/eureka
    register-with-eureka: true
    fetch-registry: true
    registryFetchIntervalSeconds: 5
    instanceInfoReplicationIntervalSeconds: 5
    initialInstanceInfoReplicationIntervalSeconds: 5
server:
  port: ${tpd.peer2Port}


---
spring:
  profiles: peer3
eureka:
  instance:
    hostname: eureka-peer3
    appname: eureka-cluster
    leaseRenewalIntervalInSeconds: 3
  client:
    serviceUrl:
      defaultZone: http://eureka-peer1:${tpd.peer1Port}/eureka,http://eureka-peer2:${tpd.peer2Port}/eureka
    register-with-eureka: true
    fetch-registry: true
    registryFetchIntervalSeconds: 5
    instanceInfoReplicationIntervalSeconds: 5
    initialInstanceInfoReplicationIntervalSeconds: 5
server:
  port: ${tpd.peer3Port}

